name: Create Issue if Not Exists

on: 
  push:
    branches:
      - development_issue_creation

permissions:
  contents: read
  issues: write

jobs:
  create_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Generate Dynamic Issue Title and Content
        id: generate_issue
        run: |
          ISSUE_TITLE="Issue from push: $(date +'%Y-%m-%d %H:%M:%S')"
          ISSUE_BODY="This issue was automatically created based on a push to the development_issue_creation branch.\n\nTimestamp: $(date +'%Y-%m-%d %H:%M:%S')"
          echo "::set-output name=title::$ISSUE_TITLE"
          echo "::set-output name=body::$ISSUE_BODY"

      - name: Check for existing issues
        id: check_issue
        uses: actions/github-script@v6
        with:
          script: |
            const title = "${{ steps.generate_issue.outputs.title }}";
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            const issueExists = issues.some(issue => issue.title === title);
            return { issueExists: issueExists };

      - name: Create a new issue if not exists
        if: steps.check_issue.outputs.issueExists == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            const title = "${{ steps.generate_issue.outputs.title }}";
            const body = "${{ steps.generate_issue.outputs.body }}";

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body
            });

      - name: Issue already exists
        if: steps.check_issue.outputs.issueExists == 'true'
        run: echo "Issue with title '${{ steps.generate_issue.outputs.title }}' already exists."
